name: Deploy Orpheus to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPO_NAME: orpheus-app
      IMAGE_TAG: latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create ECR Repository (if not exists)
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPO_NAME --region $AWS_REGION \
          || aws ecr create-repository --repository-name $ECR_REPO_NAME --region $AWS_REGION

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        run: |
          REPO_URL=$(aws ecr describe-repositories \
            --repository-names $ECR_REPO_NAME \
            --region $AWS_REGION \
            --query 'repositories[0].repositoryUri' \
            --output text)
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV
          docker build -t $REPO_URL:$IMAGE_TAG ./app
          docker push $REPO_URL:$IMAGE_TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve -input=false -var-file=terraform.tfvars
